@page "/nn"
@using BlazorML5
@using BlazorML5.Helpers
@using System.Text.Json.Serialization
@inject IJSRuntime runtime
@inject HttpClient Http

<MudText Color="Color.Success" class="mx-10 my-8" Typo="Typo.h4">Neural Network</MudText>

@if (!IsDatasetLoaded)
{
    <MudAlert Severity="Severity.Warning" class="my-8 mx-10">
        <span>
            For training loading Dataset please wait for some time
        </span><br /><br />
        <MudProgressCircular Color="Color.Warning" Indeterminate="true" />
    </MudAlert>
}
else
{
    <MudPaper Class="ma-2 mx-4" Outlined="true">
        <MudText class="mx-4 mb-4" Typo="Typo.h6">Titanic Dataset Example </MudText>
        <MudSelect T="string" class="mb-4" Label="Gender" Variant="Variant.Outlined">
            <MudSelectItem T="string" Value="@("male")" />
            <MudSelectItem T="string" Value="@("female")" />
        </MudSelect>
        <MudSelect T="string" class="mb-4" Label="Fare Class" Variant="Variant.Outlined">
            <MudSelectItem T="string" Value="@("first")" />
            <MudSelectItem T="string" Value="@("second")" />
            <MudSelectItem T="string" Value="@("third")" />
        </MudSelect>
    </MudPaper>

}



@code
{
    private bool IsDatasetLoaded = false;
    private NeuralNetwork _neuralNetwork;
    protected override async Task OnInitializedAsync()
    {
        await Ml5.InitAsync(runtime);
        NeuralNetworkOptions options = new NeuralNetworkOptions()
            {
                Inputs = 4,
                Outputs = 1,
                Task = TaskType.Classification,
                Debug = true
            };
        _neuralNetwork = await Ml5.NeuralNetworkAsync(options);
        await LoadDataAsync();
    }
    protected async Task LoadDataAsync()
    {
        var dataset = await Http.GetFromJsonAsync<Data[]>("data/titanic.json");
        IsDatasetLoaded = true;
        StateHasChanged();

    }
#nullable disable
    class Data
    {
        [JsonPropertyName("survived")]
        public string Survived { get; set; }
        [JsonPropertyName("fare_class")]
        public string FareClass { get; set; }
        [JsonPropertyName("sex")]
        public string Sex { get; set; }
        [JsonPropertyName("age")]
        public int Age { get; set; }
        [JsonPropertyName("fare")]
        public int Fare { get; set; }
    }
#nullable restore
}